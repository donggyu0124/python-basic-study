# 문자열 포맷

# 방법 1
# 아..이건 익숙하긴한데 뒤에 %가 들어가는구나
print("나는 %d살입니다." % 37)
print("나는 %s를 좋아해요." % "커피")
print("Apple은 %c로 시작해요." % "A")

# %s로 사용하면 정수나, 문자 둘 다 사용할 수 있다.
print("나는 %s살입니다." % 37)

# 방법 2
print("나는 %s와 %s를 좋아해요." % ("커피", "간식"))
favorite1:str = "커피"
favorite2:str = "간식"
print("나는 %s와 %s를 좋아해요." % (favorite1, favorite2)) # 당연히 되겠지만..

# 방법 3
print("나는 {}살입니다.".format(37))
print("나는 {0}살이며, 좋아하는 음식은 {1}입니다".format(37, "돈까스"))

# 방법 4
# 지역 변수 느낌이네. 명시적이고 좋네
print("나는 {age}살이며, {color}색을 좋아해요".format(age = 37, color = "빨간"))

_age:int = 37
# 중괄호 안에는 외부 변수명은 안들어가네
# print("나는 {_age}살이며, {color}색을 좋아해요".format(_age, color = "빨간")) # 오류
print("나는 {0}살이며, {color}색을 좋아해요".format(_age, color = "빨간"))

# 방법5
# 위 오류나는 값을 아래와 같이 f-스티링 타입의 문자열로 변경 시 가능하다.
_name:str = "동규"
_color:str = "검은"
print(f"내 이름은 {_name}이며, {_color}색을 좋아해요")

# =========================================================================================== ##

# 탈출문자
# \" \' 문장 내에서 따옴표 처리
# 예시) 나는 지금 "파이썬" 공부를 하고있어.
print("나는 지금 \"파이썬\" 공부를 하고있어")

# \\ 문장 내에서 \ 로 처리
print("\\") # 출력 \

# \r 커서를 맨 앞으로 이동 (이건 좀 신기하네)
print("Red Apple\rPine")

# \b 백스페이스 (한 글자 삭제)
print("Redd\bApple")

# \t 탭
print("Red\tApple")